name: PR Tests
on:
  pull_request:
    types: [opened, synchronize, reopened]
  repository_dispatch:
    types: [pr-test]
concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  run-tests:
    strategy:
      matrix:
        gpu: ['3090', '5090']
    runs-on:
      - self-hosted
      - ${{ matrix.gpu }}
    # Only run for non-draft PRs, or for repository_dispatch events
    if: |
      (github.event_name == 'pull_request' && !github.event.pull_request.draft) ||
      (github.event_name == 'repository_dispatch')
    steps:
      - name: Determine ref
        id: set-ref
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # Use the merged commit SHA for PRs
            echo "ref=${{ github.event.pull_request.merge_commit_sha }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
            # Use github.event.client_payload.ref if provided, else default to main
            if [[ -n "${{ github.event.client_payload.ref }}" ]]; then
              echo "ref=${{ github.event.client_payload.ref }}" >> $GITHUB_OUTPUT
            else
              echo "ref=main" >> $GITHUB_OUTPUT
            fi
          fi
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.set-ref.outputs.ref }}
          submodules: true
      - name: Show current commit
        run: git log -1 --oneline
      - name: Set up Python
        run: |
          which python
          echo "Setting up Python with Conda"
          conda create -n test_env python=3.12 -y
      - name: Install Nunchaku
        run: |
          source $(conda info --base)/etc/profile.d/conda.sh
          conda activate test_env || { echo "Failed to activate conda env"; exit 1; }
          which python
          conda install -c conda-forge gxx=11 gcc=11
          echo "Installing dependencies"
          pip install torch==2.7 torchvision==0.22 torchaudio==2.7 --index-url https://download.pytorch.org/whl/cu128
          pip install ninja wheel diffusers==0.33.1 transformers==4.51 accelerate==1.7 sentencepiece==0.2 protobuf==6.31 huggingface_hub==0.31
          pwd
          cd ..
          git clone https://github.com/nunchaku-tech/nunchaku.git
          cd nunchaku
          git log -1 --oneline
          git submodule init
          git submodule update
          python setup.py develop
      - name: Install ComfyUI
        run: |
          source $(conda info --base)/etc/profile.d/conda.sh
          conda activate test_env || { echo "Failed to activate conda env"; exit 1; }
          which python
          pwd
          cd ..
          pip install comfy-cli
          yes | comfy --here install --nvidia --skip-torch-or-directml --version 0.3.43
          cd ComfyUI
          rm -r models          
          if [[ "${{ matrix.gpu }}" == "3090" ]]; then
            mkdir -p ${{ secrets.COMFYUI_MODELS_ROOT_3090 }}
            ln -s ${{ secrets.COMFYUI_MODELS_ROOT_3090 }} models
          elif [[ "${{ matrix.gpu }}" == "5090" ]]; then
            mkdir -p ${{ secrets.COMFYUI_MODELS_ROOT_5090 }}
            ln -s ${{ secrets.COMFYUI_MODELS_ROOT_5090 }} models
          else
            mkdir -p ${{ secrets.COMFYUI_MODELS_ROOT_5090 }}
            ln -s ${{ secrets.COMFYUI_MODELS_ROOT_5090 }} models
          fi
          cp -r ../ComfyUI-nunchaku/tests nunchaku_tests
          pip install -r nunchaku_tests/requirements.txt
          cd custom_nodes
          ln -s ../../ComfyUI-nunchaku
          cd ..
          pip install -r custom_nodes/ComfyUI-nunchaku/requirements.txt
          comfy node install comfyui_controlnet_aux
          comfy node install comfyui-inpainteasy
          HF_TOKEN=${{ secrets.HF_TOKEN }} python custom_nodes/ComfyUI-nunchaku/scripts/download_models.py
          HF_TOKEN=${{ secrets.HF_TOKEN }} python custom_nodes/ComfyUI-nunchaku/scripts/download_test_data.py
      - name: Run tests
        run: |
          source $(conda info --base)/etc/profile.d/conda.sh
          conda activate test_env || { echo "Failed to activate conda env"; exit 1; }
          pwd
          cd ../ComfyUI
          pwd
          python nunchaku_tests/scripts/nunchaku-flux1-dev.py
          pytest -v nunchaku_tests/
      - name: clean up
        if: always()
        run: |
          cd ..
          rm -rf ComfyUI ComfyUI-nunchaku